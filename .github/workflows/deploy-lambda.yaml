name : Deploy Lambda

on:
  workflow_dispatch:
permissions:
  id-token: write
  contents: read

jobs:
  check-env:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.check-branch.outputs.env-name }}
    steps:
      - name: Check branch
        id: check-branch
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/prd" ]; then
            echo "env-name=prd" >>$GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/stg" ]; then
            echo "env-name=stg" >>$GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "env-name=dev" >>$GITHUB_OUTPUT
          else
            echo "env-name=dev" >>$GITHUB_OUTPUT
          fi

  deploy-lambda:
    runs-on: ubuntu-latest
    needs: [ check-env ]
    steps:
      - uses: actions/checkout@v2

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_ARN }}
          role-session-name: ${{ secrets.SESSION_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Zip
        run: |
            cd examples/lambda/
            npm install 
            npm run build
            zip -j -r ./deploy.zip ./dist/*
            ls -l
      - name: Deploy to AuditStream Lambda
        run: |
            pwd
            echo ${{ needs.check-env.outputs.env_name }}
            aws lambda update-function-code --function-name=cue-lambda-${{ needs.check-env.outputs.env_name }} --zip-file=fileb://examples/lambda/deploy.zip
          
